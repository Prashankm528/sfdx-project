<aura:component controller="REIDP_LightningSelfRegisterController" implements="forceCommunity:availableForAllPageTypes" access="global">
    <aura:attribute name="accountId" type="String" required="false" description="accountId for creating the user. If not specified, it will create a PersonAccount if possible for B2C scenario. Or otherwise if it's in a community, the community's self-registration accountId will be used."/>
    <aura:attribute name="regConfirmUrl" type="String" required="true"/>
    <aura:attribute name="startUrl" type="String" required="false" description="The url you go to after a successful login" />
    <aura:attribute name="showError" type="Boolean" required="true" description="" default="false" access="private"/>
    <aura:attribute name="errorMessage" type="String" required="false" description="" access="private"/>
    <aura:attribute name="firstnameLabel" type="String" access="private" required="false" default="{!$Label.c.IDPFirstName}"/>
    <aura:attribute name="lastnameLabel" type="String" access="private" required="false" default="{!$Label.c.IDPLastName}"/>
    <aura:attribute name="emailLabel" type="String" access="private" required="false" default="{!$Label.c.IDPEmail}"/>
    <aura:attribute name="passwordLabel" type="String" required="false" default="Create Password"/>
    <aura:attribute name="confirmPasswordLabel" type="String" access="private" required="false" default="{!$Label.c.IDPConfirmPassword}"/>    
    <aura:attribute name="submitButtonLabel" type="String" access="private" required="false" default="{!$Label.c.IDPSignUp}"/>
    <aura:attribute name="includePasswordField" type="Boolean" required="false" default="false" description="Whether to include password"/>    
    <aura:attribute name="extraFieldsFieldSet" type="String" required="false" default="REIDP_Registration_Fields" description="A field set name whose fields are desired for user registration"/>
    <aura:attribute name="extraFields" type="list" required="false" description="A field set name whose fields are desired for user registration"/>

    <aura:attribute name="acceptedPolicies" type="Boolean" default="false" description="A field that indicates whether Policies were accepted"/>
    <aura:attribute name="hasError" type="Boolean" default="false" description="A field that indicates whether Policy error should be shown to user"/>

    <aura:handler name="init" value="{!this}" action="{!c.initialize}"/>
    
    <aura:registerevent name="sitePropagatedStartUrl" type="c:REIDP_setStartUrl"/>
    <aura:handler name="init" value="{!this}" action="{!c.initialize}"/>
    <aura:dependency resource="c:REIDP_setStartUrl" type="EVENT"/>
    
    <aura:dependency resource="siteforce:registerQueryEventMap" type="EVENT"/>
    
    <aura:handler event="c:REIDP_setStartUrl" action="{!c.setStartUrl}"/> 
    
    <div>
        <aura:renderIf isTrue="{!v.showError}">
            <div id="error">
                <ui:outputRichText value="{!v.errorMessage}"/>
            </div>
            <br/>
        </aura:renderIf>
        
        <div id="sfdc_username_container" class="sfdc">
            <ui:inputText value="" aura:id="firstname" placeholder="{!v.firstnameLabel}" keyup="{!c.onKeyUp}" class="input sfdc_usernameinput sfdc"/>
        </div>
        
        <div id="sfdc_nickname_container" class="sfdc">
            <ui:inputText value="" aura:id="lastname" placeholder="{!v.lastnameLabel}" keyup="{!c.onKeyUp}" class="input sfdc_usernameinput sfdc"/>
        </div>
        
        <div id="sfdc_email_container" class="sfdc">
            <ui:inputEmail value="" aura:id="email" placeholder="{!v.emailLabel}" keyup="{!c.onKeyUp}" class="input sfdc_usernameinput sfdc"/>
        </div>
        
        <aura:iteration aura:id="extraFields" items="{!v.extraFields}" var="curField" indexVar="index">
            <div id="sfdc_extrafield_container" class="sfdc">
                <ui:inputText value="{!curField.value}" aura:id="{!curField.fieldPath}" placeholder="{!curField.label}" keyup="{!c.onKeyUp}" class="input sfdc_extrafieldinput sfdc"/>
            </div>
        </aura:iteration>
        
        <aura:renderIf isTrue="{!v.includePasswordField}">
            <div id="sfdc_password_container" class="sfdc">
                <ui:inputSecret value="" aura:id="password" placeholder="{!v.passwordLabel}" keyup="{!c.onKeyUp}" class="input sfdc_passwordinput sfdc"/>
            </div>
            
            <div id="sfdc_confirm_password_container" class="sfdc">
                <ui:inputSecret value="" aura:id="confirmPassword" placeholder="{!v.confirmPasswordLabel}" keyup="{!c.onKeyUp}" class="input sfdc_passwordinput sfdc"/>
            </div>
        </aura:renderIf>
		
        <div class="{! 'slds-form-element slds-p-vertical_medium' + if(v.hasError, ' slds-has-error')}">
            <div class="slds-form-element__control">
                <span class="slds-checkbox">
                    <input type="checkbox" name="options" id="checkbox" value="off" onclick="{!c.onCheck}" />
                    <label class="slds-checkbox__label" for="checkbox">
                        <span class="slds-checkbox_faux"></span>
                        <span class="slds-form-element__label">
                            {!format($Label.c.IDPAcceptPolicyPrefix, 'BP')}&nbsp;
                            <a href="http://www.bp.com/uk/bpidp" target="_blank" style="color: rgb(7,141,0)">
                                {!$Label.c.IDPTermsAndConditions}&nbsp;{!$Label.c.IDPAcceptPolicyAnd}&nbsp;{!$Label.c.IDPPrivacyPolicy}
                            </a> 
                            &nbsp;{!format($Label.c.IDPAcceptPolicySuffix, 'BP')}
                        </span>
                    </label>
                </span>
            </div>
            <aura:if isTrue="{!hasError}">
                <div class="slds-form-element__help">Please accept BP Privacy Policy and Terms and Conditions.</div>
            </aura:if>
        </div>        
        
        <div class="sfdc">
            <ui:button aura:id="submitButton" label="{!v.submitButtonLabel}" disabled="{!not(v.acceptedPolicies)}" press="{!c.handleSelfRegister}" class="sfdc_button"/>
        </div>
        <div class="slds-text-align_center">
            <a href="./">{!$Label.c.IDPHaveAccount}</a>
        </div>
    </div>
</aura:component>